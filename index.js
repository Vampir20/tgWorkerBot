const TelegramBot = require("node-telegram-bot-api");
const BOT = new TelegramBot("6174075115:AAF1jNr133frCvjHtOXxl5zrALmkt8E74rY", { polling: true });
const FS = require("fs")
const USERINFO = require("./user-info.json");
const ADMIN = "5696184967"
let _money = 0
let counter = 0
let refCounter = 0;

let userExperience
let profileLink
let times
BOT.setMyCommands([
  { command: "/start", description: "–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞" },
  {
    command: "/channel",
    url: "https://t.me/+MG28AC6WlfpiNjFi",
    description: "–ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª",
  },
  {
    command: "/support",
    url: "https://t.me/Ivan_ZHukovv",
    description: "–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞",
    callback_data: "supportBot ",
  },
]);

var options = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", callback_data: "register" }],
      [{ text: "—á–∞—Ç –≤–æ—Ä–∫–µ—Ä–æ–≤", url: "https://t.me/+MG28AC6WlfpiNjFi" }],
      [{ text: "–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞", url: "t.me/SMOKEYNM" }],
      [{ text: "—É –º–µ–Ω—è –µ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥", callback_data: "ref" }]
    ],
  }),
};

var profile = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{text: "–≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å", callback_data: 'profile'}]
    ]
  })
}

var adminOptions = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: "–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ—Ä–∫–µ—Ä–æ–≤", callback_data: "showusers" }],
      [{ text: "—É–∑–Ω–∞—Ç—å —á–∞—Ç –∞–π–¥–∏", callback_data: "message" }],
    ],
  }),
};

var acception = {
  reply_markup: JSON.stringify({
    inline_keyboard: [
      [{ text: "–ø—Ä–∏–Ω—è—Ç—å –∑–∞—è–≤–∫—É", callback_data: "accept" }],
      [{ text: "–æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data: "decline" }],
    ],
  }),
};

function getExperience(msg) {
  const TEXT = msg.text;
  const USERCHATID = msg.chat.id;
  userExperience = TEXT;
  USERINFO.push({
    experience_count: times,
    profile_link: userExperience,
    time_for_work: profileLink,
    chat_id: CHATID,
    ref_code: msg.chat.id,
    money: _money
  })

  FS.writeFileSync("./user-info.json", JSON.stringify(USERINFO, null, "\t"))
  BOT.removeListener("message", getExperience)
  return BOT.sendMessage(msg.chat.id, "–∞–¥–º–∏–Ω —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –≤–∞—à—É –∑–∞—è–≤–∫—É")
}

function getProfileLink(msg) {
  const TEXT = msg.text
  profileLink = TEXT
  BOT.sendMessage(msg.chat.id, "2Ô∏è‚É£ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å")
  BOT.on("message", getExperience)
  BOT.removeListener("message", getProfileLink)
  BOT.sendMessage("–ê–¥–º–∏–Ω —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –∑–∞—è–≤–∫—É")
}

function getTime(msg) {
  const TEXT = msg.text;
  times = TEXT;
  BOT.sendMessage(msg.chat.id, "3Ô∏è‚É£ —Å–∫–æ–ª—å–∫–æ –≤—Ä–º–µ–Ω–∏ –≤—ã –≥–æ—Ç–æ–≤—ã —É–¥–µ–ª–∞—Ç—å —Ä–∞–±–æ—Ç–µ –ø—Ä–∏—à–ª–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏ –≤ —á–∞—Å–∞—Ö")
  BOT.on("message", getProfileLink)
  BOT.removeListener("message", getTime)
  return BOT.sendMessage(msg.chat.id, '', profile)
}

function sendUserData(msg) {
  const CHATID = msg.chat.id
  let users = JSON.parse(FS.readFileSync("./user-info.json", "utf8"));
  for (users in USERINFO) {
    let userExperience = USERINFO[users].experience_count
    let userProfileLink = USERINFO[users].profile_link
    let timeAtWork = USERINFO[users].time_for_work
    let refCode = USERINFO[users].ref_code
    let userMoney = USERINFO[users].money
    return BOT.sendMessage(CHATID, `–û–ø—ã—Ç: ${userExperience}\n–í–æ—Ä–∫–µ—Ä: ${userProfileLink}\n–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: ${timeAtWork}\n–í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${refCode}\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${userMoney}$`, acception)
  }
}

function checkCode(msg){
  const TEXT = msg.text;
  const CHATID = msg.chat.id;
  for (key in USERINFO){
    if (TEXT == USERINFO[key].chat_id){
      BOT.sendMessage(CHATID, "–≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –æ–¥–æ–±—Ä–µ–Ω")
      refCounter++;
    }else if (counter > 0) return BOT.sendMessage(CHATID, '–¥–∞–Ω–Ω—ã–π –∫–æ–¥ —É–∂–µ –±—ã–ª –≤–≤–µ–¥–µ–Ω')

    else if (TEXT != USERINFO[key].chat_id) return BOT.sendMessage(CHATID, '–∫–æ–¥ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω')
  }
}

BOT.on("message",  (msg) => {
  const CHATID = msg.chat.id
  const TEXT = msg.text

  if (CHATID == "5770886713") {
    if (TEXT == "/start") return BOT.sendMessage(CHATID, `–ø—Ä–∏–≤–µ—Ç ${msg.from.first_name} ${msg.from.last_name} –≤–∞—à —Å—Ç–∞—Ç—É—Å: –ê–¥–º–∏–Ω`, adminOptions)
  } else {
    if (TEXT == "/start") return BOT.sendMessage(CHATID, `–ø—Ä–∏–≤–µ—Ç ${msg.from.first_name} ${msg.from.last_name}`, options)
  } 
})

BOT.on("callback_query", (msg) => {
  const CHATID = msg.from.id
  const ACTION = msg.data  
  const TEXT = msg.text

    if (ACTION == 'register'){     
      BOT.sendMessage(CHATID, `üíé –û—Ç–ª–∏—á–Ω–æ! –ü–µ—Ä–µ–π–¥–µ–º –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –∑–∞—è–≤–∫–∏\n –≤–ø–∏—à–∏ —Å–≤–æ–π –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã`)
      BOT.on("message", getTime)
}

    if (ACTION == 'showusers'){
      BOT.sendMessage(CHATID, "–≤–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–æ—Ä–∫–µ—Ä–æ–≤ –≤–ø–∏—à–∏—Ç–µ —á—Ç–æ –Ω–∏–±—É–¥—å")
      BOT.on("message", sendUserData)
    }

    if (ACTION == 'accept'){
      for (key in USERINFO) {
        const LINKS = [
          `üíé –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å ${USERINFO[key].chat_id}\n`,
          '‚ö°Ô∏è –¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ "–û–±–º–µ–Ω–Ω–∏–∫\n',
          "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: (https://t.me/+cWJy-yd5ijYxYjJi)",
          `–û–±—â–∏–π –ø—Ä–æ—Ñ–∏—Ç: ${_money}$`,
          `–ö–æ–ª-–≤–æ –ø—Ä–æ—Ñ–∏—Ç–æ–≤: ${counter}`,
          "ü§ñ –î–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –±–æ—Ç—É - –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ",
          "üó£Ô∏è –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç , –∂–µ–ª–∞–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –≤–æ—Ä–∫–∞!",
          "üìñ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ?\n",
          "üëÄ –ù–∞—à –æ–±–º–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å‚Äî https://cryptocurrency.su\n",
          "üß† –ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã - –æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –º–∞–Ω—É–∞–ª–∞–º–∏:\n",
          "‚ö°Ô∏è –ó–Ω–∞–∫–æ–º—Å—Ç–≤–æ —Å –∫–æ–º–∞–Ω–¥–æ–π ‚Äî [https://teletype.in/@caveman/am13_mkFSEr]\n",
          "‚ö°Ô∏è –ü–ª–æ—â–∞–¥–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã ‚Äî [https://teletype.in/@caveman/KIQEaD69sZ8]\n",
          '‚ö°Ô∏è –ú–µ—Ç–æ–¥ "–û–±–º–µ–Ω–Ω–∏–∫" ‚Äî [https://teletype.in/@caveman/ke7FhpV-txv]\n',
          "‚ö°Ô∏è –°—Ç—Ä–∞—Ç–µ–≥–∏–∏/–¢–µ—Ö–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç—ã ‚Äî [https://teletype.in/@caveman/1PMIqsVdwTO—å]\n",
          "‚ö°Ô∏è –ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ–ø–∏—Å–æ–∫‚Äî [https://teletype.in/@caveman/AFOiLgi1AO1]\n",
        ]
        BOT.sendMessage(USERINFO[key].chat_id, `${LINKS}`)
        BOT.sendMessage(CHATID, "—Ç–µ–∫—Å—Ç –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —é–∑–µ—Ä—É")
        _money += 100 + "$"
        console.log(_money)
        break;
      }
    }
    if(ACTION == 'decline') return BOT.sendMessage(msg.message.chat.id, `–≤—ã –æ—Ç–∫–ª–æ–Ω–∏–ª–∏ –∑–∞—è–≤–∫—É`)
    

    if(ACTION == 'ref'){
      BOT.sendMessage(msg.message.chat.id, "–≤–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥")
      for (key in USERINFO){
        if (TEXT == USERINFO[key].chat_id){
            BOT.sendMessage(USERINFO[key].chat_id, "—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –æ–¥–æ–±—Ä–µ–Ω", options)
            USERINFO[key].chat_id.money += 100;
          }else return BOT.sendMessage(USERINFO[key].chat_id, "—Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–µ –æ–¥–æ–±—Ä–µ–Ω")
          
          refCounter++;
          
      }
    if (refCounter > 0) return BOT.sendMessage(USERINFO[key].chat_id, "–¥–∞–Ω–Ω—ã–π –∫–æ–¥ —É–∂–µ –±—ã–ª –≤–≤–µ–¥–µ–Ω")
    
  }

  if (ACTION == 'profile') return BOT.sendMessage(message.chat.id, `–ê–¥–º–∏–Ω —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –≤–∞—à—É –∑—è–≤–∫—É, –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏`)

  
})

BOT.on("polling_error", console.log)
